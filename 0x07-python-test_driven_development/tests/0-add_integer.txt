The ``0-add_integer`` module
============================

Using ``add_integer``
--------------------

Import function from module:

    >>> add_integer = __import__('0-add_integer').add_integer

1 float arg-case:
    >>> add_integer(1.5)
    99

1 int arg-case:
    >>> add_integer(1)
    99

2 int arg-case:
    >>> add_integer(1, 2)
    3

2 float arg-case:
    >>> add_integer(1.5, 2.5)
    3

None b:
    >>> add_integer(1, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

None a:
    >>> add_integer(None, 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

float overflow case:
    >>> add_integer(float('inf') , -float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: Float overflow: int too large to convert to float

string, int arg-case:
    >>> add_integer("e", 1)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

int, string arg-case:
    >>> add_integer(1, "e")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

b negative:
    >>> add_integer(2, -1)
    1

a negative:
    >>> add_integer(-1, 2)
    1

a, b negative:
    >>> add_integer(-2, -1)
    -3

a, b float negative:
    >>> add_integer(-2.5, -1.5)
    -3
